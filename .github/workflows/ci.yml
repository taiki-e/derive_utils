name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
      - dev
      - staging
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo test --workspace --all-features

  msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: taiki-e/install-action@cargo-hack
      # Make sure this crate can be built with MSRV and all later versions.
      # However, this takes time, so for PR, set the version interval.
      - run: cargo hack build --workspace --ignore-private --no-dev-deps --version-range ..
        if: github.event_name != 'pull_request'
      - run: cargo hack build --workspace --ignore-private --no-dev-deps --version-range .. --version-step 2
        if: github.event_name == 'pull_request'

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo doc --workspace --all-features --document-private-items

  check-external-types:
    env:
      CARGO_CHECK_EXTERNAL_TYPES_VERSION: 0.1.6
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly-2022-11-16
      - name: Pre Cache cargo-check-external-types
        run: |
          mkdir -p .github/caching
          echo "${CARGO_CHECK_EXTERNAL_TYPES_VERSION}" > .github/caching/cargo-check-external-types.lock
          echo "${{ runner.tool_cache }}/cargo-check-external-types/bin" >> "${GITHUB_PATH}"
      - name: Cache cargo-check-external-types
        id: cache-cargo-check-external-types
        uses: actions/cache@v3
        with:
          path: ${{ runner.tool_cache }}/cargo-check-external-types/bin
          key: cargo-check-external-types-bin-${{ hashFiles('.github/caching/cargo-check-external-types.lock') }}
      - name: Install cargo-check-external-types
        run: cargo install -f cargo-check-external-types --root ${{ runner.tool_cache }}/cargo-check-external-types --locked --version "${CARGO_CHECK_EXTERNAL_TYPES_VERSION}"
        if: steps.cache-cargo-check-external-types.outputs.cache-hit != 'true'
      - run: cargo check-external-types --all-features --config .external-types.toml

  tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy,rustfmt
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-minimal-versions
      - uses: taiki-e/install-action@shellcheck
      - run: pip3 install yq
      - run: cargo fmt --all --check
        if: always()
      - run: cargo clippy --workspace --all-features --all-targets
        if: always()
      - run: cargo minimal-versions build --workspace --all-features --ignore-private
        if: always()
      - run: shellcheck $(git ls-files '*.sh')
        if: always()
      - run: tools/check-workflow.sh
        if: always()

  # ALL THE PREVIOUS JOBS NEEDS TO BE ADDED TO THE `needs` SECTION OF THIS JOB!

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs: [test, msrv, docs, check-external-types, tidy] # tidy:needs
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        run: exit 0
